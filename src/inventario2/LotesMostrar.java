/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inventario2;

import java.awt.Point;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author sys515
 */
public class LotesMostrar extends javax.swing.JFrame {
    
    Conexion con = new Conexion();
    Connection Consulta = con.conexion();
    /**
     * Creates new form Ventas
     */
    private String Usuario;
    private String Serie2;
    private String Numero2;
    private int año=0;
    private int mes=0;
    private int dia=0;
    DefaultTableModel modelo = new DefaultTableModel() {
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return false;
        }
    }; //
    DefaultTableModel modelo2 = new DefaultTableModel() {
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return false;
        }
    }; //
    private String Marca;
    private String Producto;
    private String Medida;
    public LotesMostrar(String x, String Y, String Z) {
        
       initComponents();
       EditarDetalle.setVisible(false);
       Todo.setSelected(true);
        try {
            Marca=x;
            Producto=Y;
            Medida=Z;
            EditarFactura.setVisible(false);
            PanelDetalle.setVisible(false);
            this.setTitle("Lotes - Sistema Inventario BTZ");
            this.setDefaultCloseOperation(this.HIDE_ON_CLOSE);
            modelo.setRowCount(0);
            modelo.addColumn("Fecha ");
            modelo.addColumn("Serie");
            modelo.addColumn("Número");
            Factura.setModel(modelo);
            modelo2.addColumn("Código");
            modelo2.addColumn("Producto");
            modelo2.addColumn("Marca");
            modelo2.addColumn("No Lote");
            modelo2.addColumn("Cantidad");
            modelo2.addColumn("Unidad");
            modelo2.addColumn("Costo Unitario");
            modelo2.addColumn("Costo Total");
            modelo2.addColumn("Nit");
            modelo2.addColumn("Proveedor");
            Buscador.setVisible(false);
            AutoCompleteDecorator.decorate(Buscador);
            Detalle.setModel(modelo2);
            String datos[] = new String[3];
            Statement sx = Consulta.createStatement();
            ResultSet Ca = sx.executeQuery("select V.Fecha,V.Serie,V.Numero from Proveedor P\n"
                    + "inner join FacturaCompra V\n"
                    + "on V.Proveedor_id=P.id\n"
                    + "inner join Lote L\n"
                    + "on L.FacturaCompra_id=V.id\n"
                    + "inner join Producto N\n"
                    + "on N.id=L.Producto_id where N.Nombre='" + Y + "' && N.Marca='" + x + "' && N.Medida='" + Z + "';");
            while (Ca.next()) {
                datos[0] = Ca.getString(1);
                datos[1] = Ca.getString(2);
                datos[2] = Ca.getString(3);
                
                modelo.addRow(datos);
            }
            Factura.setModel(modelo);
        } catch (SQLException ex) {
            Logger.getLogger(LotesMostrar.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        Factura.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent Mouse_evt) {
                
                JTable table = (JTable) Mouse_evt.getSource();
                Point point = Mouse_evt.getPoint();
                int row = table.rowAtPoint(point);
                if (Mouse_evt.getClickCount() == 2) {
                    
                    String Serie = String.valueOf(Factura.getValueAt(Factura.getSelectedRow(), 1));
                    String Numero = String.valueOf(Factura.getValueAt(Factura.getSelectedRow(), 2));
                    llenarDetalle(Serie, Numero);
                    
                }
                
            }
        });
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MenuFactura = new javax.swing.JPopupMenu();
        Editar = new javax.swing.JMenuItem();
        EditDetalle = new javax.swing.JPopupMenu();
        EDITAR = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Factura = new rojerusan.RSTableMetro();
        PanelDetalle = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        Detalle = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        Buscador = new javax.swing.JComboBox<>();
        Serie = new javax.swing.JRadioButton();
        Numero = new javax.swing.JRadioButton();
        Todo = new javax.swing.JRadioButton();
        EditarDetalle = new javax.swing.JPanel();
        EditarFactura = new javax.swing.JPanel();
        brz = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        NumeroEditar = new javax.swing.JTextField();
        SerieEditar = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        Usuarios = new javax.swing.JComboBox<>();
        Contra = new javax.swing.JPasswordField();
        Fecha = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();

        Editar.setText("Editar");
        Editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarActionPerformed(evt);
            }
        });
        MenuFactura.add(Editar);

        EDITAR.setText("Editar");
        EDITAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EDITARActionPerformed(evt);
            }
        });
        EditDetalle.add(EDITAR);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(189, 189, 189));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        Factura.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Factura.setComponentPopupMenu(MenuFactura);
        jScrollPane1.setViewportView(Factura);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(148, 148, 148))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 420, 370));

        PanelDetalle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        Detalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Detalle.setComponentPopupMenu(EditDetalle);
        jScrollPane4.setViewportView(Detalle);

        javax.swing.GroupLayout PanelDetalleLayout = new javax.swing.GroupLayout(PanelDetalle);
        PanelDetalle.setLayout(PanelDetalleLayout);
        PanelDetalleLayout.setHorizontalGroup(
            PanelDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelDetalleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 754, Short.MAX_VALUE)
                .addContainerGap())
        );
        PanelDetalleLayout.setVerticalGroup(
            PanelDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelDetalleLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(201, 201, 201))
        );

        jPanel1.add(PanelDetalle, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 100, 780, 120));

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(1, 1, 1));
        jLabel5.setText("Detalles de Factura");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jLabel5)
                .addContainerGap(104, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addContainerGap())
        );

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 10, 370, 40));

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(1, 1, 1));
        jLabel6.setText("Facturas De Compra");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 370, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                    .addContainerGap(94, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(59, 59, 59)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 46, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6)
                    .addContainerGap()))
        );

        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, 40));

        Buscador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscadorActionPerformed(evt);
            }
        });
        jPanel1.add(Buscador, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 60, 130, -1));

        Serie.setText("Serie");
        Serie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SerieActionPerformed(evt);
            }
        });
        jPanel1.add(Serie, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, -1, -1));

        Numero.setText("Número");
        Numero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NumeroActionPerformed(evt);
            }
        });
        jPanel1.add(Numero, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, 80, -1));

        Todo.setText("Todo");
        Todo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TodoActionPerformed(evt);
            }
        });
        jPanel1.add(Todo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        EditarDetalle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout EditarDetalleLayout = new javax.swing.GroupLayout(EditarDetalle);
        EditarDetalle.setLayout(EditarDetalleLayout);
        EditarDetalleLayout.setHorizontalGroup(
            EditarDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 778, Short.MAX_VALUE)
        );
        EditarDetalleLayout.setVerticalGroup(
            EditarDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 238, Short.MAX_VALUE)
        );

        jPanel1.add(EditarDetalle, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 230, 780, 240));

        EditarFactura.setBackground(new java.awt.Color(0, 77, 214));
        EditarFactura.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        EditarFactura.setForeground(new java.awt.Color(0, 191, 255));

        brz.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        brz.setForeground(new java.awt.Color(255, 255, 255));
        brz.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconoso/icons8-ok-32.png"))); // NOI18N
        brz.setText("Confirmar");
        brz.setContentAreaFilled(false);
        brz.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/iconoso/icons8-de-acuerdo-30.png"))); // NOI18N
        brz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brzActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(254, 254, 254));
        jLabel1.setText("Serie");

        jLabel2.setForeground(new java.awt.Color(254, 254, 254));
        jLabel2.setText("Número");

        NumeroEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NumeroEditarActionPerformed(evt);
            }
        });

        SerieEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SerieEditarActionPerformed(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(254, 254, 254));
        jLabel3.setText("Editar Factura");

        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconoso/icons8-eliminar-50.png"))); // NOI18N
        jButton1.setText("Cancelar");
        jButton1.setContentAreaFilled(false);
        jButton1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/iconoso/icons8-eliminar-filled-50.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Usuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsuariosActionPerformed(evt);
            }
        });

        Contra.setText("jPasswordField1");
        Contra.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ContraFocusGained(evt);
            }
        });

        Fecha.setDateFormatString("yyyy-MM-d");

        jLabel4.setForeground(new java.awt.Color(254, 254, 254));
        jLabel4.setText("Fecha");

        javax.swing.GroupLayout EditarFacturaLayout = new javax.swing.GroupLayout(EditarFactura);
        EditarFactura.setLayout(EditarFacturaLayout);
        EditarFacturaLayout.setHorizontalGroup(
            EditarFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditarFacturaLayout.createSequentialGroup()
                .addGroup(EditarFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EditarFacturaLayout.createSequentialGroup()
                        .addGroup(EditarFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(EditarFacturaLayout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jLabel1)
                                .addGap(31, 31, 31))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EditarFacturaLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(EditarFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(EditarFacturaLayout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(jLabel4))
                                    .addComponent(SerieEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(EditarFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NumeroEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)))
                    .addGroup(EditarFacturaLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(Fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(EditarFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(brz, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(EditarFacturaLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jButton1)))
                .addGap(21, 21, 21))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EditarFacturaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(EditarFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Usuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Contra, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41))
        );
        EditarFacturaLayout.setVerticalGroup(
            EditarFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EditarFacturaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(EditarFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EditarFacturaLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addGroup(EditarFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(8, 8, 8)
                        .addGroup(EditarFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SerieEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NumeroEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(EditarFacturaLayout.createSequentialGroup()
                        .addComponent(Usuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(Contra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addGap(10, 10, 10)
                .addGroup(EditarFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(brz, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(EditarFactura, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 230, 400, 240));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 9, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void actualizar()
    {   modelo.setRowCount(0);
        try{
        String datos[] = new String[3];
            Statement sx = Consulta.createStatement();
            ResultSet Ca = sx.executeQuery("select V.Fecha,V.Serie,V.Numero from Proveedor P\n"
                    + "inner join FacturaCompra V\n"
                    + "on V.Proveedor_id=P.id\n"
                    + "inner join Lote L\n"
                    + "on L.FacturaCompra_id=V.id\n"
                    + "inner join Producto N\n"
                    + "on N.id=L.Producto_id where N.Nombre='" + Producto + "' && N.Marca='" + Marca + "' && N.Medida='" + Medida + "';");
            while (Ca.next()) {
                datos[0] = Ca.getString(1);
                datos[1] = Ca.getString(2);
                datos[2] = Ca.getString(3);
                
                modelo.addRow(datos);
            }
            Factura.setModel(modelo);
        } catch (SQLException ex) {
            Logger.getLogger(LotesMostrar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        
    }//GEN-LAST:event_formWindowClosing
    private void llenar()
    {
        modelo.setRowCount(0);
        try {
            String datos[] = new String[3];
            Statement sx = Consulta.createStatement();
            ResultSet Ca = sx.executeQuery("select V.Fecha,V.Serie,V.Numero from Proveedor P\n"
                    + "inner join FacturaCompra V\n"
                    + "on V.Proveedor_id=P.id\n"
                    + "inner join Lote L\n"
                    + "on L.FacturaCompra_id=V.id\n"
                    + "inner join Producto N\n"
                    + "on N.id=L.Producto_id where N.Nombre='" + Producto + "' && N.Marca='" + Marca + "' && N.Medida='" + Medida + "';");
            while (Ca.next()) {
                datos[0] = Ca.getString(1);
                datos[1] = Ca.getString(2);
                datos[2] = Ca.getString(3);
                
                modelo.addRow(datos);
            }
            Factura.setModel(modelo);
        } catch (SQLException ex) {
            Logger.getLogger(LotesMostrar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void TodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TodoActionPerformed
        if(Todo.isSelected())
        {
            Serie.setSelected(false);
            Numero.setSelected(false);
            llenar();
            Buscador.setVisible(false);
        }
        else
        {
            Serie.setSelected(false);
            Numero.setSelected(false);
            llenar();
            Todo.setSelected(true);
            Buscador.setVisible(false);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_TodoActionPerformed

    private void SerieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SerieActionPerformed
        if(Serie.isSelected())
        {
            Buscador.removeAllItems();
            Todo.setSelected(false);
            Numero.setSelected(false);
            Buscador.setVisible(true);
            Serie();
        }
        else
        {
            Todo.setSelected(true);
            Serie.setSelected(false);
            Serie.setSelected(false);

            llenar();
            Buscador.setVisible(false);
            
            
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_SerieActionPerformed

    private void NumeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumeroActionPerformed
         if(Numero.isSelected())
        {
            Buscador.removeAllItems();
            Todo.setSelected(false);
            Serie.setSelected(false);
            Buscador.setVisible(true);
            Numero();
        }
        else
        {
            Todo.setSelected(true);
            Serie.setSelected(false);
            Serie.setSelected(false);

            llenar();
            Buscador.setVisible(false);
            
            
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_NumeroActionPerformed

    private void BuscadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscadorActionPerformed
          String Completo = (String) Buscador.getSelectedItem();  
          if (Serie.isSelected()) {
            BusquedaSerie(Completo);
        }
        if (Numero.isSelected()) {
            BusquedaNumero(Completo);
        }
        
          
        // TODO add your handling code here:
    }//GEN-LAST:event_BuscadorActionPerformed
    private void us() {
        AutoCompleteDecorator.decorate(Usuarios);
        Usuarios.removeAllItems();
        try {
            Statement sx = Consulta.createStatement();
            ResultSet Ca = sx.executeQuery("SELECT Usuario FROM Usuarios where  Privilegios='Administrador'");
            while (Ca.next()) {

                Usuarios.addItem(Ca.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Inventario.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
     private Boolean vef()
    {
       
        
        
        char claves[]=Contra.getPassword();
        String clavedef=new String(claves);
        int c=0;
        try{
            Statement sx = Consulta.createStatement();
            ResultSet Ca = sx.executeQuery("SELECT Usuario, Contraseña, Privilegios FROM Usuarios");
            while (Ca.next()) 
            {
                c++;
                if(c!=0)
                {
               // System.out.println(Ca.getString(1)+" -- "+Ca.getString(2));
               // System.out.println(us+"***"+clavedef);
               if((Usuario.equals(Ca.getString(1)))&&(clavedef.equals(Ca.getString(2)))&&Ca.getString(3).equals("Administrador"))
                {
                   return true;
                }
                }
                else
                {
                   return false;
                }
                              
            }
            
        }catch(SQLException ex){
            Logger.getLogger(Ingreso.class.getName()).log(Level.SEVERE, null, ex);
        }
     
        return false;
    }
    private void EditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarActionPerformed
        us();
        int seleccionar = 0;
        seleccionar = Factura.getSelectedRow();
        Boolean s=true;
        if (seleccionar == -1) {
            JOptionPane.showMessageDialog(null, "Seleccione un fila valida");
        } 
        else
        {
            if(s==true)
            {
                
               EditarFactura.setVisible(true);
               EditarDetalle.setVisible(false);
               String Serie= String.valueOf(Factura.getValueAt(Factura.getSelectedRow(), 1));
               String Numero = String.valueOf(Factura.getValueAt(Factura.getSelectedRow(), 2));
               Serie2= String.valueOf(Factura.getValueAt(Factura.getSelectedRow(), 1));
               Numero2 = String.valueOf(Factura.getValueAt(Factura.getSelectedRow(), 2));
               
               SerieEditar.setText(Serie);
               NumeroEditar.setText(Numero);
              
                

            }
        }
        
        
                    
        
        // TODO add your handling code here:
    }//GEN-LAST:event_EditarActionPerformed

    private void SerieEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SerieEditarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SerieEditarActionPerformed

    private void NumeroEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumeroEditarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NumeroEditarActionPerformed
    private void USF()
   {
       String id=idLote();
        try {
            PreparedStatement ActualizarProveedor = Consulta.prepareStatement(""
                    + "UPDATE FacturaCompra SET Serie='"+SerieEditar.getText()+"',Numero='"+NumeroEditar.getText()+"' where id='"+id+"'");
            ActualizarProveedor.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(MostrarLotes.class.getName()).log(Level.SEVERE, null, ex);
        }
   }
    private void UCF(String f)
   {
       String id=idLote();
        try {
           PreparedStatement ActualizarProveedor = Consulta.prepareStatement(""
                    + "UPDATE FacturaCompra SET Serie='"+SerieEditar.getText()+"',Numero='"+NumeroEditar.getText()+"',Fecha='"+f+"' where id='"+id+"'");
            ActualizarProveedor.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(MostrarLotes.class.getName()).log(Level.SEVERE, null, ex);
        }
   }
    private String idLote()
   {    String id=null;
        try {
            Statement sx = Consulta.createStatement();
            ResultSet Ca = sx.executeQuery("SELECT id FROM FacturaCompra where Serie='"+Serie2+"' && Numero='"+Numero2+"'");
            while(Ca.next())
            {
                id=Ca.getString(1);
            }
        } catch (SQLException ex) {
            Logger.getLogger(MostrarLotes.class.getName()).log(Level.SEVERE, null, ex);
        }
        return id;
   }
    private void brzActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brzActionPerformed
        if(FacturaValida())
        {
            if(vef())
            {
                    try
                    {

                        año = Fecha.getCalendar().get(Calendar.YEAR);
                        mes = Fecha.getCalendar().get(Calendar.MONTH) + 1;
                        dia = Fecha.getCalendar().get(Calendar.DAY_OF_MONTH);

                    }                                        
                    catch(NullPointerException ex) {
                    }
                    if(año==0&&mes==0&&dia==0)
                    {
                        USF();
                        actualizar();
                        EditarFactura.setVisible(false);
                        JOptionPane.showMessageDialog(null, "Modificado");
                     
                    }
                    else
                    {
                                String Fecha=año+"-"+mes+"-"+dia;
                        if(Fecha2(Fecha)>=0)
                        {
                            UCF(Fecha);
                            actualizar();
                            EditarFactura.setVisible(false);
                        }
                        else                      
                        {
                            JOptionPane.showMessageDialog(null, "Fecha incoherente: "+Fecha);
                        }
                    }
                    
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Acceso Denegado"); 
            }
            Contra.setText("*******");
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Esta Serie y/o Número ya esta registrada");
            
        }
        
    }//GEN-LAST:event_brzActionPerformed
    private int Fecha2(String f)
    {
        Date date = new Date();
       DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
       String fecha3=dateFormat.format(date);
       
       
        SimpleDateFormat formatoDelTexto = new SimpleDateFormat("yyyy-MM-dd");
        
        Date fecha1 = null;
        Date fecha2 = null;
        try {

            fecha1 = formatoDelTexto.parse(fecha3);
            fecha2 = formatoDelTexto.parse(f);

        } catch (ParseException ex) {

            ex.printStackTrace();

        }
        return fecha1.compareTo(fecha2);
    }
    private Boolean FacturaValida()
    {
        Boolean J=true;
        try {
            
            Statement sx = Consulta.createStatement();
            ResultSet Ca = sx.executeQuery("SELECT id FROM FacturaCompra where Serie='"+SerieEditar.getText()+"' && Numero='"+NumeroEditar.getText()+"'");
            while(Ca.next())
            {
                J=false;
            }
        } catch (SQLException ex) {
            Logger.getLogger(LotesMostrar.class.getName()).log(Level.SEVERE, null, ex);
        }
        return J;

    }
    private void UsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsuariosActionPerformed
    Usuario= (String) Usuarios.getSelectedItem();   

        // TODO add your handling code here:
    }//GEN-LAST:event_UsuariosActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        EditarFactura.setVisible(false);
        NumeroEditar.setText("");
        SerieEditar.setText("");
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ContraFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ContraFocusGained
        Contra.setText("");        // TODO add your handling code here:
    }//GEN-LAST:event_ContraFocusGained

    private void EDITARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EDITARActionPerformed
        EditarDetalle.setVisible(true);
        EditarFactura.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_EDITARActionPerformed
      private void BusquedaNumero(String Cod)
    {
         modelo.setRowCount(0);

        try {

            String datos[] = new String[6];
            Statement sx = Consulta.createStatement();
            ResultSet Ca = sx.executeQuery("select V.Fecha,V.Serie,V.Numero from Proveedor P\n"
                    + "inner join FacturaCompra V\n"
                    + "on V.Proveedor_id=P.id\n"
                    + "inner join Lote L\n"
                    + "on L.FacturaCompra_id=V.id\n"
                    + "inner join Producto N\n"
                    + "on N.id=L.Producto_id where N.Nombre='" + Producto + "' && N.Marca='" + Marca + "' && N.Medida='" + Medida + "' && V.Numero='"+Cod+"';");
             while (Ca.next()) {
                datos[0] = Ca.getString(1);
                datos[1] = Ca.getString(2);
                datos[2] = Ca.getString(3);
                
                modelo.addRow(datos);
            }
            Factura.setModel(modelo);

        } catch (SQLException ex) {
            Logger.getLogger(Ingreso.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void BusquedaSerie(String Cod)
    {
         modelo.setRowCount(0);

        try {

            String datos[] = new String[6];
            Statement sx = Consulta.createStatement();
            ResultSet Ca = sx.executeQuery("select V.Fecha,V.Serie,V.Numero from Proveedor P\n"
                    + "inner join FacturaCompra V\n"
                    + "on V.Proveedor_id=P.id\n"
                    + "inner join Lote L\n"
                    + "on L.FacturaCompra_id=V.id\n"
                    + "inner join Producto N\n"
                    + "on N.id=L.Producto_id where N.Nombre='" + Producto + "' && N.Marca='" + Marca + "' && N.Medida='" + Medida + "' && V.Serie='"+Cod+"';");
             while (Ca.next()) {
                datos[0] = Ca.getString(1);
                datos[1] = Ca.getString(2);
                datos[2] = Ca.getString(3);
                
                modelo.addRow(datos);
            }
            Factura.setModel(modelo);

        } catch (SQLException ex) {
            Logger.getLogger(Ingreso.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void Numero()
    {
        try {
            Statement sx = Consulta.createStatement();
            ResultSet Ca = sx.executeQuery("select V.Numero from Proveedor P\n"
                    + "inner join FacturaCompra V\n"
                    + "on V.Proveedor_id=P.id\n"
                    + "inner join Lote L\n"
                    + "on L.FacturaCompra_id=V.id\n"
                    + "inner join Producto N\n"
                    + "on N.id=L.Producto_id where N.Nombre='" + Producto + "' && N.Marca='" + Marca + "' && N.Medida='" + Medida + "';");
            while (Ca.next()) {

                Buscador.addItem(Ca.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Inventario.class.getName()).log(Level.SEVERE, null, ex);
        }  
    }
    private void Serie()
    {
        try {
            Statement sx = Consulta.createStatement();
            ResultSet Ca = sx.executeQuery("select V.Serie from Proveedor P\n"
                    + "inner join FacturaCompra V\n"
                    + "on V.Proveedor_id=P.id\n"
                    + "inner join Lote L\n"
                    + "on L.FacturaCompra_id=V.id\n"
                    + "inner join Producto N\n"
                    + "on N.id=L.Producto_id where N.Nombre='" + Producto + "' && N.Marca='" + Marca + "' && N.Medida='" + Medida + "';");
            while (Ca.next()) {

                Buscador.addItem(Ca.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Inventario.class.getName()).log(Level.SEVERE, null, ex);
        }  
    }
    private void llenarDetalle(String Serie, String numero) {
        modelo2.setRowCount(0);
        try {
            String datos[] = new String[10];
            PanelDetalle.setVisible(true);
            Statement sx = Consulta.createStatement();
            ResultSet Ca = sx.executeQuery("	select P.Codigo,P.Nombre,P.Marca,L.NoLote,L.Cantidadi,P.Medida,L.CostoUnitario,L.CostoTotal,V.Nit,V.NombreV\n"
                    + "	from Producto P \n"
                    + "	inner join Lote L\n"
                    + "	on L.Producto_id=P.id\n"
                    + "	inner join FacturaCompra F\n"
                    + "	on F.id=L.FacturaCompra_id\n"
                    + "	inner join Proveedor V\n"
                    + "	on V.id=F.Proveedor_id where F.Serie='" + Serie + "' && F.Numero='" + numero + "' && P.Nombre='"+Producto+"' && P.Marca='"+Marca+"'"
                            + "&& P.Medida='"+Medida+"';");
            while (Ca.next()) {
                datos[0] = Ca.getString(1);
                datos[1] = Ca.getString(2);
                datos[2] = Ca.getString(3);
                datos[3] = Ca.getString(4);
                datos[4] = Ca.getString(5);
                datos[5] = Ca.getString(6);
                datos[6] = Ca.getString(7);
                datos[7] = Ca.getString(8);
                datos[8] = Ca.getString(9);
                datos[9] = Ca.getString(10);
                
                modelo2.addRow(datos);
            }
            Detalle.setModel(modelo2);
        } catch (SQLException ex) {
            Logger.getLogger(LotesMostrar.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LotesMostrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LotesMostrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LotesMostrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LotesMostrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LotesMostrar(null, null, null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Buscador;
    private javax.swing.JPasswordField Contra;
    private javax.swing.JTable Detalle;
    private javax.swing.JMenuItem EDITAR;
    private javax.swing.JPopupMenu EditDetalle;
    private javax.swing.JMenuItem Editar;
    private javax.swing.JPanel EditarDetalle;
    private javax.swing.JPanel EditarFactura;
    private rojerusan.RSTableMetro Factura;
    private com.toedter.calendar.JDateChooser Fecha;
    private javax.swing.JPopupMenu MenuFactura;
    private javax.swing.JRadioButton Numero;
    private javax.swing.JTextField NumeroEditar;
    private javax.swing.JPanel PanelDetalle;
    private javax.swing.JRadioButton Serie;
    private javax.swing.JTextField SerieEditar;
    private javax.swing.JRadioButton Todo;
    private javax.swing.JComboBox<String> Usuarios;
    private javax.swing.JButton brz;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}
